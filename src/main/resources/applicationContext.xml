<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jee="http://www.springframework.org/schema/jee" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="
	http://www.springframework.org/schema/tx      http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
	http://www.springframework.org/schema/beans	  http://www.springframework.org/schema/beans/spring-beans-3.1.xsd 
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
	http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd"
	default-lazy-init="false">

	<description>Spring 容器配置</description>

	<bean id="config" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:redis.properties</value>
			</list>
		</property>
	</bean>

	<context:annotation-config />
	<context:component-scan base-package="com.weizh.redis" />

	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxIdle" value="${redis.maxIdle}" />
		<property name="maxTotal" value="${redis.maxTotal}" />
		<property name="maxWaitMillis" value="${redis.maxWaitMillis}" />
		<property name="testOnBorrow" value="${redis.testOnBorrow}" />
	</bean>

	<bean id="clusterRedisNodes1" class="org.springframework.data.redis.connection.RedisNode">
		<constructor-arg value="10.11.2.57" />
		<constructor-arg value="7000" type="int" />
	</bean>

	<bean id="clusterRedisNodes2" class="org.springframework.data.redis.connection.RedisNode">
		<constructor-arg value="10.11.2.57" />
		<constructor-arg value="7001" type="int" />
	</bean>

	<bean id="clusterRedisNodes3" class="org.springframework.data.redis.connection.RedisNode">
		<constructor-arg value="10.11.2.57" />
		<constructor-arg value="7002" type="int" />
	</bean>

	<bean id="clusterRedisNodes4" class="org.springframework.data.redis.connection.RedisNode">
		<constructor-arg value="10.11.2.57" />
		<constructor-arg value="7003" type="int" />
	</bean>

	<bean id="clusterRedisNodes5" class="org.springframework.data.redis.connection.RedisNode">
		<constructor-arg value="10.11.2.57" />
		<constructor-arg value="7004" type="int" />
	</bean>

	<bean id="clusterRedisNodes6" class="org.springframework.data.redis.connection.RedisNode">
		<constructor-arg value="10.11.2.57" />
		<constructor-arg value="7005" type="int" />
	</bean>

	<bean id="redisClusterConfiguration" class="org.springframework.data.redis.connection.RedisClusterConfiguration">
		<property name="clusterNodes">
			<set>
				<ref bean="clusterRedisNodes1" />
				<ref bean="clusterRedisNodes2" />
				<ref bean="clusterRedisNodes3" />
				<ref bean="clusterRedisNodes4" />
				<ref bean="clusterRedisNodes5" />
				<ref bean="clusterRedisNodes6" />
			</set>
		</property>
		<property name="maxRedirects" value="5" />
	</bean>

	<bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<constructor-arg ref="redisClusterConfiguration" />
		<constructor-arg ref="jedisPoolConfig" />
	</bean>

	<!-- <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory" p:host-name="${redis.host}" 
		p:port="${redis.port}" p:pool-config-ref="jedisPoolConfig" /> -->

	<bean id="stringRedisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
		<property name="connectionFactory" ref="jedisConnectionFactory" />
		<property name="keySerializer">
			<bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		</property>
		<property name="valueSerializer">
			<bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />
		</property>
	</bean>

	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate" p:connection-factory-ref="jedisConnectionFactory" />

</beans>